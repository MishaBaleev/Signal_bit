{"ast":null,"code":"\"use strict\";\n\nvar window = require(\"global/window\");\nvar _extends = require(\"@babel/runtime/helpers/extends\");\nvar isFunction = require('is-function');\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n  if (!headers) {\n    return result;\n  }\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n  return true;\n}\nfunction initParams(uri, options, callback) {\n  var params = uri;\n  if (isFunction(options)) {\n    callback = options;\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n  params.callback = callback;\n  return params;\n}\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n  var called = false;\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n    return body;\n  }\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n    var response = failureResponse;\n    var err = null;\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n    return callback(err, response, response.body);\n  }\n  var xhr = options.xhr || null;\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n  xhr.onabort = function () {\n    aborted = true;\n  };\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n  xhr.send(body || null);\n  return xhr;\n}\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n  return null;\n}\nfunction noop() {}","map":{"version":3,"names":["window","require","_extends","isFunction","createXHR","httpHandler","parseHeaders","headers","result","trim","split","forEach","row","index","indexOf","key","slice","toLowerCase","value","Array","isArray","push","module","exports","default","XMLHttpRequest","noop","XDomainRequest","forEachArray","method","uri","options","callback","initParams","toUpperCase","_createXHR","array","iterator","i","length","isEmpty","obj","hasOwnProperty","params","Error","called","cbOnce","err","response","body","readystatechange","xhr","readyState","setTimeout","loadFunc","getBody","undefined","responseText","getXml","isJson","JSON","parse","e","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","aborted","status","useXDR","url","rawRequest","getAllResponseHeaders","cors","data","sync","json","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","documentElement","nodeName"],"sources":["/Users/mihailbaleev/Documents/GitHub/signal-BIT/signal/node_modules/@videojs/xhr/lib/index.js"],"sourcesContent":["\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAe,CAAC;AAErC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAExD,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEvCG,SAAS,CAACC,WAAW,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIK,YAAY,GAAG,SAASA,YAAYA,CAACC,OAAO,EAAE;EAChD,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAI,CAACD,OAAO,EAAE;IACZ,OAAOC,MAAM;EACf;EAEAD,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;IAChD,IAAIC,KAAK,GAAGD,GAAG,CAACE,OAAO,CAAC,GAAG,CAAC;IAC5B,IAAIC,GAAG,GAAGH,GAAG,CAACI,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC,CAACJ,IAAI,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC;IAClD,IAAIC,KAAK,GAAGN,GAAG,CAACI,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC,CAACJ,IAAI,CAAC,CAAC;IAEvC,IAAI,OAAOD,MAAM,CAACO,GAAG,CAAC,KAAK,WAAW,EAAE;MACtCP,MAAM,CAACO,GAAG,CAAC,GAAGG,KAAK;IACrB,CAAC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACZ,MAAM,CAACO,GAAG,CAAC,CAAC,EAAE;MACrCP,MAAM,CAACO,GAAG,CAAC,CAACM,IAAI,CAACH,KAAK,CAAC;IACzB,CAAC,MAAM;MACLV,MAAM,CAACO,GAAG,CAAC,GAAG,CAACP,MAAM,CAACO,GAAG,CAAC,EAAEG,KAAK,CAAC;IACpC;EACF,CAAC,CAAC;EACF,OAAOV,MAAM;AACf,CAAC;AAEDc,MAAM,CAACC,OAAO,GAAGnB,SAAS,CAAC,CAAC;;AAE5BkB,MAAM,CAACC,OAAO,CAACC,OAAO,GAAGpB,SAAS;AAClCA,SAAS,CAACqB,cAAc,GAAGzB,MAAM,CAACyB,cAAc,IAAIC,IAAI;AACxDtB,SAAS,CAACuB,cAAc,GAAG,iBAAiB,IAAI,IAAIvB,SAAS,CAACqB,cAAc,CAAC,CAAC,GAAGrB,SAAS,CAACqB,cAAc,GAAGzB,MAAM,CAAC2B,cAAc;AACjIC,YAAY,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,EAAE,UAAUC,MAAM,EAAE;EAChFzB,SAAS,CAACyB,MAAM,KAAK,QAAQ,GAAG,KAAK,GAAGA,MAAM,CAAC,GAAG,UAAUC,GAAG,EAAEC,OAAO,EAAEC,QAAQ,EAAE;IAClFD,OAAO,GAAGE,UAAU,CAACH,GAAG,EAAEC,OAAO,EAAEC,QAAQ,CAAC;IAC5CD,OAAO,CAACF,MAAM,GAAGA,MAAM,CAACK,WAAW,CAAC,CAAC;IACrC,OAAOC,UAAU,CAACJ,OAAO,CAAC;EAC5B,CAAC;AACH,CAAC,CAAC;AAEF,SAASH,YAAYA,CAACQ,KAAK,EAAEC,QAAQ,EAAE;EACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACrCD,QAAQ,CAACD,KAAK,CAACE,CAAC,CAAC,CAAC;EACpB;AACF;AAEA,SAASE,OAAOA,CAACC,GAAG,EAAE;EACpB,KAAK,IAAIH,CAAC,IAAIG,GAAG,EAAE;IACjB,IAAIA,GAAG,CAACC,cAAc,CAACJ,CAAC,CAAC,EAAE,OAAO,KAAK;EACzC;EAEA,OAAO,IAAI;AACb;AAEA,SAASL,UAAUA,CAACH,GAAG,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EAC1C,IAAIW,MAAM,GAAGb,GAAG;EAEhB,IAAI3B,UAAU,CAAC4B,OAAO,CAAC,EAAE;IACvBC,QAAQ,GAAGD,OAAO;IAElB,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;MAC3Ba,MAAM,GAAG;QACPb,GAAG,EAAEA;MACP,CAAC;IACH;EACF,CAAC,MAAM;IACLa,MAAM,GAAGzC,QAAQ,CAAC,CAAC,CAAC,EAAE6B,OAAO,EAAE;MAC7BD,GAAG,EAAEA;IACP,CAAC,CAAC;EACJ;EAEAa,MAAM,CAACX,QAAQ,GAAGA,QAAQ;EAC1B,OAAOW,MAAM;AACf;AAEA,SAASvC,SAASA,CAAC0B,GAAG,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACzCD,OAAO,GAAGE,UAAU,CAACH,GAAG,EAAEC,OAAO,EAAEC,QAAQ,CAAC;EAC5C,OAAOG,UAAU,CAACJ,OAAO,CAAC;AAC5B;AAEA,SAASI,UAAUA,CAACJ,OAAO,EAAE;EAC3B,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,WAAW,EAAE;IAC3C,MAAM,IAAIY,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EAEA,IAAIC,MAAM,GAAG,KAAK;EAElB,IAAIb,QAAQ,GAAG,SAASc,MAAMA,CAACC,GAAG,EAAEC,QAAQ,EAAEC,IAAI,EAAE;IAClD,IAAI,CAACJ,MAAM,EAAE;MACXA,MAAM,GAAG,IAAI;MACbd,OAAO,CAACC,QAAQ,CAACe,GAAG,EAAEC,QAAQ,EAAEC,IAAI,CAAC;IACvC;EACF,CAAC;EAED,SAASC,gBAAgBA,CAAA,EAAG;IAC1B,IAAIC,GAAG,CAACC,UAAU,KAAK,CAAC,EAAE;MACxBC,UAAU,CAACC,QAAQ,EAAE,CAAC,CAAC;IACzB;EACF;EAEA,SAASC,OAAOA,CAAA,EAAG;IACjB;IACA,IAAIN,IAAI,GAAGO,SAAS;IAEpB,IAAIL,GAAG,CAACH,QAAQ,EAAE;MAChBC,IAAI,GAAGE,GAAG,CAACH,QAAQ;IACrB,CAAC,MAAM;MACLC,IAAI,GAAGE,GAAG,CAACM,YAAY,IAAIC,MAAM,CAACP,GAAG,CAAC;IACxC;IAEA,IAAIQ,MAAM,EAAE;MACV,IAAI;QACFV,IAAI,GAAGW,IAAI,CAACC,KAAK,CAACZ,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOa,CAAC,EAAE,CAAC;IACf;IAEA,OAAOb,IAAI;EACb;EAEA,SAASc,SAASA,CAACC,GAAG,EAAE;IACtBC,YAAY,CAACC,YAAY,CAAC;IAE1B,IAAI,EAAEF,GAAG,YAAYpB,KAAK,CAAC,EAAE;MAC3BoB,GAAG,GAAG,IAAIpB,KAAK,CAAC,EAAE,IAAIoB,GAAG,IAAI,8BAA8B,CAAC,CAAC;IAC/D;IAEAA,GAAG,CAACG,UAAU,GAAG,CAAC;IAClB,OAAOnC,QAAQ,CAACgC,GAAG,EAAEI,eAAe,CAAC;EACvC,CAAC,CAAC;;EAGF,SAASd,QAAQA,CAAA,EAAG;IAClB,IAAIe,OAAO,EAAE;IACb,IAAIC,MAAM;IACVL,YAAY,CAACC,YAAY,CAAC;IAE1B,IAAInC,OAAO,CAACwC,MAAM,IAAIpB,GAAG,CAACmB,MAAM,KAAKd,SAAS,EAAE;MAC9C;MACAc,MAAM,GAAG,GAAG;IACd,CAAC,MAAM;MACLA,MAAM,GAAGnB,GAAG,CAACmB,MAAM,KAAK,IAAI,GAAG,GAAG,GAAGnB,GAAG,CAACmB,MAAM;IACjD;IAEA,IAAItB,QAAQ,GAAGoB,eAAe;IAC9B,IAAIrB,GAAG,GAAG,IAAI;IAEd,IAAIuB,MAAM,KAAK,CAAC,EAAE;MAChBtB,QAAQ,GAAG;QACTC,IAAI,EAAEM,OAAO,CAAC,CAAC;QACfY,UAAU,EAAEG,MAAM;QAClBzC,MAAM,EAAEA,MAAM;QACdtB,OAAO,EAAE,CAAC,CAAC;QACXiE,GAAG,EAAE1C,GAAG;QACR2C,UAAU,EAAEtB;MACd,CAAC;MAED,IAAIA,GAAG,CAACuB,qBAAqB,EAAE;QAC7B;QACA1B,QAAQ,CAACzC,OAAO,GAAGD,YAAY,CAAC6C,GAAG,CAACuB,qBAAqB,CAAC,CAAC,CAAC;MAC9D;IACF,CAAC,MAAM;MACL3B,GAAG,GAAG,IAAIH,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,OAAOZ,QAAQ,CAACe,GAAG,EAAEC,QAAQ,EAAEA,QAAQ,CAACC,IAAI,CAAC;EAC/C;EAEA,IAAIE,GAAG,GAAGpB,OAAO,CAACoB,GAAG,IAAI,IAAI;EAE7B,IAAI,CAACA,GAAG,EAAE;IACR,IAAIpB,OAAO,CAAC4C,IAAI,IAAI5C,OAAO,CAACwC,MAAM,EAAE;MAClCpB,GAAG,GAAG,IAAI/C,SAAS,CAACuB,cAAc,CAAC,CAAC;IACtC,CAAC,MAAM;MACLwB,GAAG,GAAG,IAAI/C,SAAS,CAACqB,cAAc,CAAC,CAAC;IACtC;EACF;EAEA,IAAIV,GAAG;EACP,IAAIsD,OAAO;EACX,IAAIvC,GAAG,GAAGqB,GAAG,CAACqB,GAAG,GAAGzC,OAAO,CAACD,GAAG,IAAIC,OAAO,CAACyC,GAAG;EAC9C,IAAI3C,MAAM,GAAGsB,GAAG,CAACtB,MAAM,GAAGE,OAAO,CAACF,MAAM,IAAI,KAAK;EACjD,IAAIoB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,IAAIlB,OAAO,CAAC6C,IAAI;EACvC,IAAIrE,OAAO,GAAG4C,GAAG,CAAC5C,OAAO,GAAGwB,OAAO,CAACxB,OAAO,IAAI,CAAC,CAAC;EACjD,IAAIsE,IAAI,GAAG,CAAC,CAAC9C,OAAO,CAAC8C,IAAI;EACzB,IAAIlB,MAAM,GAAG,KAAK;EAClB,IAAIO,YAAY;EAChB,IAAIE,eAAe,GAAG;IACpBnB,IAAI,EAAEO,SAAS;IACfjD,OAAO,EAAE,CAAC,CAAC;IACX4D,UAAU,EAAE,CAAC;IACbtC,MAAM,EAAEA,MAAM;IACd2C,GAAG,EAAE1C,GAAG;IACR2C,UAAU,EAAEtB;EACd,CAAC;EAED,IAAI,MAAM,IAAIpB,OAAO,IAAIA,OAAO,CAAC+C,IAAI,KAAK,KAAK,EAAE;IAC/CnB,MAAM,GAAG,IAAI;IACbpD,OAAO,CAAC,QAAQ,CAAC,IAAIA,OAAO,CAAC,QAAQ,CAAC,KAAKA,OAAO,CAAC,QAAQ,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC;;IAEpF,IAAIsB,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,MAAM,EAAE;MACzCtB,OAAO,CAAC,cAAc,CAAC,IAAIA,OAAO,CAAC,cAAc,CAAC,KAAKA,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC;;MAEtG0C,IAAI,GAAGW,IAAI,CAACmB,SAAS,CAAChD,OAAO,CAAC+C,IAAI,KAAK,IAAI,GAAG7B,IAAI,GAAGlB,OAAO,CAAC+C,IAAI,CAAC;IACpE;EACF;EAEA3B,GAAG,CAAC6B,kBAAkB,GAAG9B,gBAAgB;EACzCC,GAAG,CAAC8B,MAAM,GAAG3B,QAAQ;EACrBH,GAAG,CAAC+B,OAAO,GAAGnB,SAAS,CAAC,CAAC;;EAEzBZ,GAAG,CAACgC,UAAU,GAAG,YAAY,CAAC;EAAA,CAC7B;EAEDhC,GAAG,CAACiC,OAAO,GAAG,YAAY;IACxBf,OAAO,GAAG,IAAI;EAChB,CAAC;EAEDlB,GAAG,CAACkC,SAAS,GAAGtB,SAAS;EACzBZ,GAAG,CAACmC,IAAI,CAACzD,MAAM,EAAEC,GAAG,EAAE,CAAC+C,IAAI,EAAE9C,OAAO,CAACwD,QAAQ,EAAExD,OAAO,CAACyD,QAAQ,CAAC,CAAC,CAAC;;EAElE,IAAI,CAACX,IAAI,EAAE;IACT1B,GAAG,CAACsC,eAAe,GAAG,CAAC,CAAC1D,OAAO,CAAC0D,eAAe;EACjD,CAAC,CAAC;EACF;EACA;;EAGA,IAAI,CAACZ,IAAI,IAAI9C,OAAO,CAAC2D,OAAO,GAAG,CAAC,EAAE;IAChCxB,YAAY,GAAGb,UAAU,CAAC,YAAY;MACpC,IAAIgB,OAAO,EAAE;MACbA,OAAO,GAAG,IAAI,CAAC,CAAC;;MAEhBlB,GAAG,CAACwC,KAAK,CAAC,SAAS,CAAC;MACpB,IAAI7B,CAAC,GAAG,IAAIlB,KAAK,CAAC,wBAAwB,CAAC;MAC3CkB,CAAC,CAAC8B,IAAI,GAAG,WAAW;MACpB7B,SAAS,CAACD,CAAC,CAAC;IACd,CAAC,EAAE/B,OAAO,CAAC2D,OAAO,CAAC;EACrB;EAEA,IAAIvC,GAAG,CAAC0C,gBAAgB,EAAE;IACxB,KAAK9E,GAAG,IAAIR,OAAO,EAAE;MACnB,IAAIA,OAAO,CAACmC,cAAc,CAAC3B,GAAG,CAAC,EAAE;QAC/BoC,GAAG,CAAC0C,gBAAgB,CAAC9E,GAAG,EAAER,OAAO,CAACQ,GAAG,CAAC,CAAC;MACzC;IACF;EACF,CAAC,MAAM,IAAIgB,OAAO,CAACxB,OAAO,IAAI,CAACiC,OAAO,CAACT,OAAO,CAACxB,OAAO,CAAC,EAAE;IACvD,MAAM,IAAIqC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EAEA,IAAI,cAAc,IAAIb,OAAO,EAAE;IAC7BoB,GAAG,CAAC2C,YAAY,GAAG/D,OAAO,CAAC+D,YAAY;EACzC;EAEA,IAAI,YAAY,IAAI/D,OAAO,IAAI,OAAOA,OAAO,CAACgE,UAAU,KAAK,UAAU,EAAE;IACvEhE,OAAO,CAACgE,UAAU,CAAC5C,GAAG,CAAC;EACzB,CAAC,CAAC;EACF;EACA;;EAGAA,GAAG,CAAC6C,IAAI,CAAC/C,IAAI,IAAI,IAAI,CAAC;EACtB,OAAOE,GAAG;AACZ;AAEA,SAASO,MAAMA,CAACP,GAAG,EAAE;EACnB;EACA;EACA,IAAI;IACF,IAAIA,GAAG,CAAC2C,YAAY,KAAK,UAAU,EAAE;MACnC,OAAO3C,GAAG,CAAC8C,WAAW;IACxB;IAEA,IAAIC,qBAAqB,GAAG/C,GAAG,CAAC8C,WAAW,IAAI9C,GAAG,CAAC8C,WAAW,CAACE,eAAe,CAACC,QAAQ,KAAK,aAAa;IAEzG,IAAIjD,GAAG,CAAC2C,YAAY,KAAK,EAAE,IAAI,CAACI,qBAAqB,EAAE;MACrD,OAAO/C,GAAG,CAAC8C,WAAW;IACxB;EACF,CAAC,CAAC,OAAOnC,CAAC,EAAE,CAAC;EAEb,OAAO,IAAI;AACb;AAEA,SAASpC,IAAIA,CAAA,EAAG,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}