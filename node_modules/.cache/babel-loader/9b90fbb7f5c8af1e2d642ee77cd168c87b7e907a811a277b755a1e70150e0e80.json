{"ast":null,"code":"import window from 'global/window';\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}","map":{"version":3,"names":["window","atob","s","Buffer","from","toString","decodeB64ToUint8Array","b64Text","decodedString","array","Uint8Array","length","i","charCodeAt"],"sources":["/Users/mihailbaleev/Documents/GitHub/signal-BIT/signal/node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js"],"sourcesContent":["import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAElC,IAAIC,IAAI,GAAG,SAASA,IAAIA,CAACC,CAAC,EAAE;EAC1B,OAAOF,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACC,CAAC,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACF,CAAC,EAAE,QAAQ,CAAC,CAACG,QAAQ,CAAC,QAAQ,CAAC;AACnF,CAAC;AAED,eAAe,SAASC,qBAAqBA,CAACC,OAAO,EAAE;EACrD,IAAIC,aAAa,GAAGP,IAAI,CAACM,OAAO,CAAC;EACjC,IAAIE,KAAK,GAAG,IAAIC,UAAU,CAACF,aAAa,CAACG,MAAM,CAAC;EAEhD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,aAAa,CAACG,MAAM,EAAEC,CAAC,EAAE,EAAE;IAC7CH,KAAK,CAACG,CAAC,CAAC,GAAGJ,aAAa,CAACK,UAAU,CAACD,CAAC,CAAC;EACxC;EAEA,OAAOH,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}