{"ast":null,"code":"var MAX_UINT32 = Math.pow(2, 32);\nvar getUint64 = function (uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n    return value;\n  }\n  return dv.getUint32(0) * MAX_UINT32 + dv.getUint32(4);\n};\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};","map":{"version":3,"names":["MAX_UINT32","Math","pow","getUint64","uint8","dv","DataView","buffer","byteOffset","byteLength","value","getBigUint64","Number","MAX_SAFE_INTEGER","getUint32","module","exports"],"sources":["/Users/mihailbaleev/Documents/GitHub/signal-BIT/signal/node_modules/mux.js/lib/utils/numbers.js"],"sourcesContent":["var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAEhC,IAAIC,SAAS,GAAG,SAAAA,CAASC,KAAK,EAAE;EAC9B,IAAIC,EAAE,GAAG,IAAIC,QAAQ,CAACF,KAAK,CAACG,MAAM,EAAEH,KAAK,CAACI,UAAU,EAAEJ,KAAK,CAACK,UAAU,CAAC;EACvE,IAAIC,KAAK;EAET,IAAIL,EAAE,CAACM,YAAY,EAAE;IACnBD,KAAK,GAAGL,EAAE,CAACM,YAAY,CAAC,CAAC,CAAC;IAE1B,IAAID,KAAK,GAAGE,MAAM,CAACC,gBAAgB,EAAE;MACnC,OAAOD,MAAM,CAACF,KAAK,CAAC;IACtB;IAEA,OAAOA,KAAK;EACd;EAEA,OAAQL,EAAE,CAACS,SAAS,CAAC,CAAC,CAAC,GAAGd,UAAU,GAAIK,EAAE,CAACS,SAAS,CAAC,CAAC,CAAC;AACzD,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG;EACfb,SAAS,EAAEA,SAAS;EACpBH,UAAU,EAAEA;AACd,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}